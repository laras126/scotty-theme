
// ---
// Mixins
// ---


// These are mixins!


// Media Queries
// http://css-tricks.com/conditional-media-query-mixins/

// A breakpoint mixin is super useful for nesting within other selectors:

$MQs: true;

@mixin bp($point) {
  @if ($MQs) {
    // These screen sized map to the screen variables in _varibles.scss
    $bp-xs: "(min-width: #{$screen-xs})";
    $bp-sm: "(min-width: #{$screen-sm})";
    $bp-md: "(min-width: #{$screen-md})";
    $bp-lg: "(min-width: #{$screen-lg})";

    @if $point == xs {
      @media #{$bp-xs} { @content; }
    }
    @else if $point == sm {
      @media #{$bp-sm} { @content; }
    }
    @else if $point == md {
      @media #{$bp-md} { @content; }
    }
    @else if $point == lg {
      @media #{$bp-lg} { @content; }
    }
  }
}




// Containers

$c-pad: 10%;

@mixin contain($size: md) {
  max-width: $screen-lg;
  width: 95%;
  margin: 0 auto;

  @include bp(md) {
    @if $size == sm {
      padding-left: $c-pad;
      padding-right: $c-pad;
    }
    @elseif $size == md {
      padding-left: $c-pad/2;
      padding-right: $c-pad/2;
    }
  }
}

.contain-sm {
  @include contain(sm);
}

.contain-md {
  @include contain(md);
}

.contain-lg {
  @include contain(lg);
}




// Flexbox Layout

$sizes: (
  full:   100%,
  half:   50%,
  third:  33.333333%,
  fourth: 25%,
  sixth:  16.66666667%
);

@mixin cell($size: false, $guttered: true) {

  @if $guttered {
    padding-left: $gutter/2;
    padding-right: $gutter/2;
  }

  @if $size != false {
      flex: 0 0 map-get($sizes, $size);
      max-width: map-get($sizes, $size); // Fix for Firefox
  } @else {
      flex: 1;
  }
}

@mixin grid($guttered: true) {
  display: flex;

  @if $guttered {
    margin-left: -$gutter/2;
    margin-right: -$gutter/2;
  }
}



// Rotate color schemes

// I like to have a mixin for rotating background and text colors.
@mixin rotate($bkgd: $color-rotate-bkgd, $text: $color-rotate-text, $link-clr: $color-rotate-link) {
    background-color: $bkgd;
    color: $text;

    a,
    a:visited{
      color: $link-clr;
    }

    a:hover {
  		color: darken($link-clr, 20%);
    }
}


// Uppercase, slightly letterspaced text. Could use for headings.
// Mainly a timesaver.

@mixin upperspace() {
	letter-spacing: 1px;
	text-transform: uppercase;
}


